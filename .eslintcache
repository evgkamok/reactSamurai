[{"/home/evgkam/WebstormProjects/react-samurai/src/index.js":"1","/home/evgkam/WebstormProjects/react-samurai/src/App.js":"2","/home/evgkam/WebstormProjects/react-samurai/src/reportWebVitals.js":"3","/home/evgkam/WebstormProjects/react-samurai/src/redux/redux-store.ts":"4","/home/evgkam/WebstormProjects/react-samurai/src/redux/app-reducer.ts":"5","/home/evgkam/WebstormProjects/react-samurai/src/redux/dialogs-reducer.ts":"6","/home/evgkam/WebstormProjects/react-samurai/src/redux/auth-reducer.ts":"7","/home/evgkam/WebstormProjects/react-samurai/src/redux/users-reducer.ts":"8","/home/evgkam/WebstormProjects/react-samurai/src/redux/newsPage-reducer.js":"9","/home/evgkam/WebstormProjects/react-samurai/src/components/Header/HeaderContainer.jsx":"10","/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/Profile.jsx":"11","/home/evgkam/WebstormProjects/react-samurai/src/components/Sidebar/Sidebar.jsx":"12","/home/evgkam/WebstormProjects/react-samurai/src/components/Dialogs/DialogsPage.jsx":"13","/home/evgkam/WebstormProjects/react-samurai/src/components/Login/Login.tsx":"14","/home/evgkam/WebstormProjects/react-samurai/src/components/Users/UsersPageContainer.tsx":"15","/home/evgkam/WebstormProjects/react-samurai/src/components/News/NewsContainer.jsx":"16","/home/evgkam/WebstormProjects/react-samurai/src/components/common/prelodaer/Preloader.jsx":"17","/home/evgkam/WebstormProjects/react-samurai/src/api/api.ts":"18","/home/evgkam/WebstormProjects/react-samurai/src/hoc/withAuthRedirect.js":"19","/home/evgkam/WebstormProjects/react-samurai/src/components/common/FormControl/FormsControl.tsx":"20","/home/evgkam/WebstormProjects/react-samurai/src/utils/validator/validator.ts":"21","/home/evgkam/WebstormProjects/react-samurai/src/components/Header/Header.jsx":"22","/home/evgkam/WebstormProjects/react-samurai/src/components/Users/UsersPage.tsx":"23","/home/evgkam/WebstormProjects/react-samurai/src/components/News/News.jsx":"24","/home/evgkam/WebstormProjects/react-samurai/src/components/Sidebar/Navbar/Navbar.jsx":"25","/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/ProfileInfo/ProfileInfoContainer.jsx":"26","/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/MyPost/MyPostsContainer.jsx":"27","/home/evgkam/WebstormProjects/react-samurai/src/components/Dialogs/NamesList/NamesListContainer.jsx":"28","/home/evgkam/WebstormProjects/react-samurai/src/components/Dialogs/MessagesList/MessagesListContainer.jsx":"29","/home/evgkam/WebstormProjects/react-samurai/src/components/Dialogs/SendMessage/SendMessageContainer.jsx":"30","/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/ProfileInfo/ProfileInfo.jsx":"31","/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/MyPost/MyPosts.jsx":"32","/home/evgkam/WebstormProjects/react-samurai/src/components/Dialogs/SendMessage/SendMessage.jsx":"33","/home/evgkam/WebstormProjects/react-samurai/src/components/Dialogs/MessagesList/MessagesList.jsx":"34","/home/evgkam/WebstormProjects/react-samurai/src/components/Dialogs/NamesList/NamesList.jsx":"35","/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/MyPost/Post/Post.jsx":"36","/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/ProfileStatus/ProfileSatusHOOK.jsx":"37","/home/evgkam/WebstormProjects/react-samurai/src/utils/objectHelpers.js":"38","/home/evgkam/WebstormProjects/react-samurai/src/components/Users/UsersPagination.tsx":"39","/home/evgkam/WebstormProjects/react-samurai/src/components/Users/User.tsx":"40","/home/evgkam/WebstormProjects/react-samurai/src/components/Users/UsersList.tsx":"41","/home/evgkam/WebstormProjects/react-samurai/src/hoc/withSuspense.js":"42","/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/ProfileInfo/ProfileInfoEditForm.jsx":"43","/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/ProfileInfo/ProfileInfoData.jsx":"44","/home/evgkam/WebstormProjects/react-samurai/src/redux/profile-reducer.ts":"45","/home/evgkam/WebstormProjects/react-samurai/src/redux/sidebar-reducer.ts":"46","/home/evgkam/WebstormProjects/react-samurai/src/components/Sidebar/FreindsList/FreindListContainer.jsx":"47","/home/evgkam/WebstormProjects/react-samurai/src/components/Sidebar/FreindsList/FreindList.jsx":"48","/home/evgkam/WebstormProjects/react-samurai/src/redux/users-selectors.ts":"49"},{"size":653,"mtime":1617302366945,"results":"50","hashOfConfig":"51"},{"size":1735,"mtime":1617302358098,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":1614704021428,"results":"53","hashOfConfig":"51"},{"size":1144,"mtime":1617354147911,"results":"54","hashOfConfig":"51"},{"size":1061,"mtime":1617465226500,"results":"55","hashOfConfig":"51"},{"size":2062,"mtime":1617465267867,"results":"56","hashOfConfig":"51"},{"size":3576,"mtime":1617614376270,"results":"57","hashOfConfig":"51"},{"size":5049,"mtime":1617464940075,"results":"58","hashOfConfig":"51"},{"size":1264,"mtime":1617282768571,"results":"59","hashOfConfig":"51"},{"size":439,"mtime":1617299387078,"results":"60","hashOfConfig":"51"},{"size":565,"mtime":1616795497056,"results":"61","hashOfConfig":"51"},{"size":415,"mtime":1617304155326,"results":"62","hashOfConfig":"51"},{"size":515,"mtime":1614704021428,"results":"63","hashOfConfig":"51"},{"size":2577,"mtime":1617716396495,"results":"64","hashOfConfig":"51"},{"size":2073,"mtime":1617366341222,"results":"65","hashOfConfig":"51"},{"size":1297,"mtime":1614811201758,"results":"66","hashOfConfig":"51"},{"size":293,"mtime":1615647070601,"results":"67","hashOfConfig":"51"},{"size":2947,"mtime":1617713812055,"results":"68","hashOfConfig":"51"},{"size":545,"mtime":1615708998822,"results":"69","hashOfConfig":"51"},{"size":803,"mtime":1617713812115,"results":"70","hashOfConfig":"51"},{"size":409,"mtime":1617569648121,"results":"71","hashOfConfig":"51"},{"size":712,"mtime":1614704021432,"results":"72","hashOfConfig":"51"},{"size":1283,"mtime":1617354891771,"results":"73","hashOfConfig":"51"},{"size":2848,"mtime":1614977700614,"results":"74","hashOfConfig":"51"},{"size":871,"mtime":1614704021440,"results":"75","hashOfConfig":"51"},{"size":1847,"mtime":1617299533432,"results":"76","hashOfConfig":"51"},{"size":443,"mtime":1617281419169,"results":"77","hashOfConfig":"51"},{"size":775,"mtime":1614704021432,"results":"78","hashOfConfig":"51"},{"size":546,"mtime":1614704021432,"results":"79","hashOfConfig":"51"},{"size":379,"mtime":1617279195633,"results":"80","hashOfConfig":"51"},{"size":1722,"mtime":1617124857468,"results":"81","hashOfConfig":"51"},{"size":1111,"mtime":1616847717191,"results":"82","hashOfConfig":"51"},{"size":1151,"mtime":1614704021432,"results":"83","hashOfConfig":"51"},{"size":249,"mtime":1614704021432,"results":"84","hashOfConfig":"51"},{"size":236,"mtime":1614704021432,"results":"85","hashOfConfig":"51"},{"size":343,"mtime":1614704021436,"results":"86","hashOfConfig":"51"},{"size":1249,"mtime":1617125325090,"results":"87","hashOfConfig":"51"},{"size":216,"mtime":1617021325302,"results":"88","hashOfConfig":"51"},{"size":1586,"mtime":1617312905219,"results":"89","hashOfConfig":"51"},{"size":1770,"mtime":1617313914101,"results":"90","hashOfConfig":"51"},{"size":1040,"mtime":1617313919436,"results":"91","hashOfConfig":"51"},{"size":301,"mtime":1615709473426,"results":"92","hashOfConfig":"51"},{"size":2007,"mtime":1617125320618,"results":"93","hashOfConfig":"51"},{"size":1369,"mtime":1617125313015,"results":"94","hashOfConfig":"51"},{"size":4427,"mtime":1617468230181,"results":"95","hashOfConfig":"51"},{"size":1202,"mtime":1617303332680,"results":"96","hashOfConfig":"51"},{"size":364,"mtime":1617304188425,"results":"97","hashOfConfig":"51"},{"size":462,"mtime":1617304397360,"results":"98","hashOfConfig":"51"},{"size":952,"mtime":1617354233864,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"13uuj3j",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"109"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"109"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"/home/evgkam/WebstormProjects/react-samurai/src/index.js",[],["207","208"],"/home/evgkam/WebstormProjects/react-samurai/src/App.js",[],"/home/evgkam/WebstormProjects/react-samurai/src/reportWebVitals.js",[],"/home/evgkam/WebstormProjects/react-samurai/src/redux/redux-store.ts",[],["209","210"],"/home/evgkam/WebstormProjects/react-samurai/src/redux/app-reducer.ts",[],"/home/evgkam/WebstormProjects/react-samurai/src/redux/dialogs-reducer.ts",["211","212"],"import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\n\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\ntype NameType = {\r\n  id: number,\r\n  name: string,\r\n  avatarUrl: string\r\n}\r\ntype MessageType = {\r\n  id: number\r\n  message: string\r\n}\r\ntype ActionsTypes = SendMessageActionType;\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst initialState = {\r\n  namesData: [\r\n    { id: 1, name: 'Dima', avatarUrl: 'https://www.pinclipart.com/picdir/middle/78-789013_digital-product-designer-avatar-clipart.png' },\r\n    { id: 2, name: 'Misha', avatarUrl: 'https://yt3.ggpht.com/a/AATXAJxzipABt6i1VBC3xK1Ae4lVXtl2eYxHcpfIYTO6Yw=s900-c-k-c0xffffffff-no-rj-mo' },\r\n    { id: 3, name: 'Artem', avatarUrl: 'https://yt3.ggpht.com/a/AATXAJzScTUctO-lhLQlG2rPVoQTkwvAsjcHR1ykquCnCA=s900-c-k-c0xffffffff-no-rj-mo' },\r\n    { id: 4, name: 'Lesha', avatarUrl: 'https://yt3.ggpht.com/a/AATXAJwPr2tvdxxyiuih0zf9F6XIs6HSNbYvTThYU9uLF7w=s900-c-k-c0xffffffff-no-rj-mo' },\r\n    { id: 5, name: 'Sasha', avatarUrl: 'https://yt3.ggpht.com/a/AATXAJxgKTROGfuL8fqvRGLkkdGaUNWjKETTMu1giw=s900-c-k-c0xffffffff-no-rj-mo' },\r\n    { id: 6, name: 'Grisha', avatarUrl: 'https://im0-tub-ru.yandex.net/i?id=e0d3b461ca9ea58e6b5535ee63ea5053&ref=rim&n=33&w=150&h=150' },\r\n  ] as Array<NameType>,\r\n  messagesData: [\r\n    {id: 1, message: 'Hello'},\r\n    {id: 2, message: 'How are you ?'},\r\n    {id: 3, message: 'How old are you ?'}\r\n  ] as Array<MessageType>\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      const newMessage = {\r\n        id: 999,\r\n        message: action.textMessage,\r\n      }\r\n      return {\r\n        ...state,\r\n        messagesData: [...state.messagesData, newMessage],\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype SendMessageActionType = {\r\n  type: typeof SEND_MESSAGE\r\n  textMessage: string\r\n}\r\nexport const sendMessage = (textMessage: string): SendMessageActionType => ({type: SEND_MESSAGE, textMessage});\r\n\r\nexport default dialogsReducer;\r\n","/home/evgkam/WebstormProjects/react-samurai/src/redux/auth-reducer.ts",[],"/home/evgkam/WebstormProjects/react-samurai/src/redux/users-reducer.ts",[],"/home/evgkam/WebstormProjects/react-samurai/src/redux/newsPage-reducer.js",["213"],"import React from 'react'\r\nimport {userAPI} from \"../api/api\";\r\n\r\nconst SET_NEW_NEWS = 'SET_NEW_NEWS'\r\nconst newsText = 'If you want to start measuring performance in your app, pass a function to log results ' +\r\n  '(for example: reportWebVitals(console.log)) or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals'\r\n\r\n\r\nconst initialState = {\r\n  newsList: [\r\n    {id: 1, title: 'First news', text: newsText, author: 'Author'},\r\n    {id: 2, title: 'First news', text: newsText, author: 'Author'},\r\n    {id: 3, title: 'First news', text: newsText, author: 'Author'},\r\n    {id: 4, title: 'First news', text: newsText, author: 'Author'}\r\n  ],\r\n  testProps: null\r\n}\r\n\r\nconst newsPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_NEW_NEWS:\r\n      return {\r\n        ...state,\r\n        testProps: action.testProps\r\n      }\r\n    default:\r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n}\r\n\r\nexport const setNewNewsAC = (testProps) => ({type: SET_NEW_NEWS, testProps: testProps});\r\n\r\nexport const thunkCreateSetNewNews = (userId, message) => (dispatch) => {\r\n  userAPI.setUserProfile(userId)\r\n    .then(response => {\r\n        console.log(response.data.fullName)\r\n      }\r\n    )\r\n}\r\n\r\nexport default newsPageReducer;","/home/evgkam/WebstormProjects/react-samurai/src/components/Header/HeaderContainer.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/Profile.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Sidebar/Sidebar.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Dialogs/DialogsPage.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Login/Login.tsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Users/UsersPageContainer.tsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/News/NewsContainer.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/common/prelodaer/Preloader.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/api/api.ts",["214"],"/home/evgkam/WebstormProjects/react-samurai/src/hoc/withAuthRedirect.js",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/common/FormControl/FormsControl.tsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/utils/validator/validator.ts",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Header/Header.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Users/UsersPage.tsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/News/News.jsx",["215"],"import React from 'react';\r\nimport {TextArea} from \"../common/FormControl/FormsControl\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required} from \"../../utils/validator/validator\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst NewsForm = (props) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <Field\r\n          name={'newsForm'}\r\n          component={TextArea}\r\n          placeholder={'Type here your news'}\r\n          validate={required}\r\n        />\r\n        <div>\r\n          <button>Send news</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst NewsWithReduxForm = reduxForm({form: 'newsForm'})(NewsForm)\r\n\r\nconst onSendNews = (values) => {\r\n  console.log(values)\r\n}\r\n\r\n\r\nconst ListItem = (props) => {\r\n\r\n  React.useEffect( () => {\r\n    console.log('DID MOUNT OR UPDATE');\r\n    return () => {\r\n      console.log('WILL UNMOUNT')\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li>10000000000</li>\r\n        <li>20000000000</li>\r\n        <li>30000000000</li>\r\n        <li>40000000000</li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\n// const ButtonToggle = () => {\r\n//   const [isVisible, setVisible] = React.useState(true);\r\n//   return (\r\n//     <div>\r\n//       <button onClick={null}>\r\n//         HIDE / SHOW\r\n//       </button>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst News = (props) => {\r\n\r\n  const [isVisible, setVisible] = React.useState(true);\r\n\r\n  const changeVisible = (() => {\r\n    setVisible(visible => !visible);\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <h1>This is NEWS page</h1>\r\n      <NewsWithReduxForm onSubmit={onSendNews}/>\r\n      <h2>{props.testProps}</h2>\r\n      <hr/>\r\n\r\n      <button onClick={changeVisible}>\r\n        HIDE / SHOW\r\n      </button>\r\n\r\n      {isVisible && <ListItem/>}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withAuthRedirect(News);\r\n\r\n//\r\n// class NewsForm extends React.Component{\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <form onSubmit={this.props.handleSubmit}>\r\n//           <Field\r\n//             name={'newsForm'}\r\n//             component={TextArea}\r\n//             placeholder={'Type here your news'}\r\n//             validate={required}\r\n//           />\r\n//           <div>\r\n//             <button>Send news</button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n//\r\n// const NewsWithReduxForm = reduxForm({form: 'newsForm'})(NewsForm)\r\n//\r\n// const onSendNews = (values) => {\r\n//   console.log(values)\r\n// }\r\n//\r\n// class News extends React.Component {\r\n//\r\n//   render() {\r\n//     console.log(this.props)\r\n//     return (\r\n//       <div>\r\n//         <h1>This is NEWS page</h1>\r\n//         <NewsWithReduxForm onSubmit={onSendNews}/>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n//\r\n//\r\n// export default News;","/home/evgkam/WebstormProjects/react-samurai/src/components/Sidebar/Navbar/Navbar.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/ProfileInfo/ProfileInfoContainer.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/MyPost/MyPostsContainer.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Dialogs/NamesList/NamesListContainer.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Dialogs/MessagesList/MessagesListContainer.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Dialogs/SendMessage/SendMessageContainer.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/ProfileInfo/ProfileInfo.jsx",["216"],"import React, {useState} from 'react';\r\nimport styles from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/prelodaer/Preloader\";\r\nimport noneAvatar from \"../../../assets/noneAvatar.png\";\r\nimport ProfileInfoEditForm from \"./ProfileInfoEditForm\";\r\nimport ProfileInfoData from \"./ProfileInfoData\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  const onLoadPhotoFile = (event) => {\r\n    if (event.target.files.length > 0) {\r\n      props.uploadPhotoFile(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveData(formData);\r\n    setEditMode(false);\r\n  }\r\n\r\n  const [isEditMode, setEditMode] = useState(false);\r\n\r\n  if (!props.profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.profileInfoPhoto}>\r\n        <img src={props.profile.photos.large || noneAvatar} alt=\"photo\" className={styles.profileInfoPhoto}/>\r\n        <div className={styles.uploadPhotoButton}>\r\n          {!props.isOwner\r\n            ? null\r\n            : <>\r\n              <label htmlFor='uploadPhotoInput' className={styles.uploadPhotoLabel}>Upload photo</label>\r\n              <input type={'file'}\r\n                     onChange={onLoadPhotoFile}\r\n                     id={'uploadPhotoInput'}\r\n                     className={styles.uploadPhotoInput}/>\r\n            </>}\r\n        </div>\r\n      </div>\r\n\r\n      {\r\n        isEditMode\r\n          ? <ProfileInfoEditForm {...props} initialValues={props.profile}\r\n                                 stopEditMode={()=>setEditMode(false)}\r\n                                 onSubmit={onSubmit} />\r\n          : <ProfileInfoData {...props} setEditMode={() => setEditMode(true)}/>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/MyPost/MyPosts.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Dialogs/SendMessage/SendMessage.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Dialogs/MessagesList/MessagesList.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Dialogs/NamesList/NamesList.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/MyPost/Post/Post.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/ProfileStatus/ProfileSatusHOOK.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/utils/objectHelpers.js",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Users/UsersPagination.tsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Users/User.tsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Users/UsersList.tsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/hoc/withSuspense.js",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/ProfileInfo/ProfileInfoEditForm.jsx",["217","218"],"import React, {useState} from 'react';\nimport styles from \"./ProfileInfo.module.css\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../../common/FormControl/FormsControl\";\nimport ProfileStatusHook from \"../ProfileStatus/ProfileSatusHOOK\";\nimport {required} from \"../../../utils/validator/validator\";\n\nconst InputField = ({displayName, fieldName, type = null, validate, ...props}) => {\n  return (\n    <div className={styles.inputField}>\n      <label htmlFor={fieldName}>{displayName}</label>\n      <Field component={Input} name={fieldName} validate={validate} type={type} {...props}/>\n    </div>\n  )\n}\n\nconst contactsArray = (contacts) => {\n  const resultArray = [];\n  Object.keys(contacts).map((propName, id) => {\n    const contact =\n      <div key={id} className={styles.contact}>\n        <InputField displayName={propName} fieldName={`contacts.${propName}`} placeholder={propName}/>\n      </div>\n    resultArray.push(contact)\n  })\n  return resultArray;\n}\n\nconst ProfileInfoEditForm = (props) => {\n  const {contacts} = props.profile;\n  return (\n\n    <form onSubmit={props.handleSubmit}>\n      {props.error &&\n      <div className={styles.serverError}>\n        {props.error}\n      </div>\n      }\n      <ProfileStatusHook status={props.status} setUserStatusMessage={props.setUserStatusMessage} isOwner={props.isOwner}/>\n      <InputField displayName={'Name: '} fieldName={'fullName'} validate={[required]}/>\n      <InputField displayName={'About me: '} fieldName={'aboutMe'} validate={[required]}/>\n      <InputField displayName={'Looking for a job: '} fieldName={'lookingForAJob'} type={'checkbox'}\n                  validate={[required]}/>\n      <InputField displayName={'Status job: '} fieldName={'lookingForAJobDescription'} validate={[required]}/>\n      <b>Contacts: </b>\n      {contactsArray(contacts)}\n      <button>Save</button>\n      <button onClick={props.stopEditMode}>Cancel</button>\n    </form>\n  )\n}\n\nexport default reduxForm({form: 'editProfileForm'})(ProfileInfoEditForm);","/home/evgkam/WebstormProjects/react-samurai/src/components/Profile/ProfileInfo/ProfileInfoData.jsx",["219"],"import React, {useState} from 'react';\nimport styles from \"./ProfileInfo.module.css\";\nimport ProfileStatusHook from \"../ProfileStatus/ProfileSatusHOOK\";\n\nconst ProfileField = ({nameField, dataField, ...props}) => {\n  return (\n    <div {...props}>\n      <b>{nameField}</b> {dataField}\n    </div>\n  )\n}\n\nconst ProfileInfoData = ({profile, status, isOwner, setUserStatusMessage, setEditMode}) => {\n  return (\n    <div className={styles.profileData}>\n      <ProfileStatusHook status={status} setUserStatusMessage={setUserStatusMessage} isOwner={isOwner}/>\n      <ProfileField nameField={'Name:'} dataField={profile.fullName}/>\n      <ProfileField nameField={'About me:'} dataField={profile.aboutMe}/>\n      <ProfileField nameField={'Looking for a job:'} dataField={profile.lookingForAJob ? 'yes' : 'no'}/>\n      {\n        profile.lookingForAJob &&\n        <ProfileField nameField={'Status job:'} dataField={profile.lookingForAJobDescription}/>\n      }\n      <b>Contacts: </b>\n      {\n        Object.keys(profile.contacts).map((propName, id) => {\n          if (profile.contacts[propName]) {\n            return <ProfileField key={id} nameField={propName} dataField={profile.contacts[propName]}/>\n          }\n          return null\n        })\n      }\n      {isOwner &&\n      <button onClick={setEditMode}>Edit profile</button>}\n    </div>\n  )\n}\n\nexport default ProfileInfoData;","/home/evgkam/WebstormProjects/react-samurai/src/redux/profile-reducer.ts",["220"],"import {ResultCodesEnum, userAPI, userProfile} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst UPLOAD_PHOTO_SUCCESS = 'UPLOAD_PHOTO_SUCCESS';\r\n\r\n\r\nconst initialState = {\r\n  postsData: [\r\n    {id: 1, message: 'Hello, it is my first post'},\r\n    {id: 2, message: 'Hello, it is my second post'},\r\n    {id: 3, message: 'Hello, it is my third post'}\r\n  ] as Array<PostType>,\r\n  profile: null as ProfileType | null,\r\n  status: '' as string | null\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\ntype ActionsTypes = AddPostActionType | SetUserProfileActionType | SetUserStatusActionType | DeletePostActionType\r\n  | UploadPhotoSuccessActionType;\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\r\n\r\nconst profilePageReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      const newPost = {\r\n        id: 999,\r\n        message: action.newPostText\r\n      }\r\n      return {\r\n        ...state,\r\n        postsData: [...state.postsData, newPost],\r\n      }\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n    case SET_USER_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        postsData: state.postsData.filter(item => item.id !== action.id)\r\n      }\r\n    case UPLOAD_PHOTO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        profile: {...state.profile, photos: action.photoData} as ProfileType\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype AddPostActionType = {\r\n  type: typeof ADD_POST\r\n  newPostText: string\r\n}\r\nexport const addPost = (newPostText: string): AddPostActionType => ({type: ADD_POST, newPostText});\r\n\r\ntype SetUserProfileActionType = {\r\n  type: typeof SET_USER_PROFILE\r\n  profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({type: SET_USER_PROFILE, profile});\r\n\r\ntype SetUserStatusActionType = {\r\n  type: typeof SET_USER_STATUS\r\n  status: string\r\n}\r\nexport const setUserStatus = (status: string): SetUserStatusActionType => ({type: SET_USER_STATUS, status});\r\n\r\ntype DeletePostActionType = {\r\n  type: typeof DELETE_POST\r\n  id: number\r\n}\r\nexport const deletePost = (id: number): DeletePostActionType => ({type: DELETE_POST, id});\r\n\r\ntype UploadPhotoSuccessActionType = {\r\n  type: typeof UPLOAD_PHOTO_SUCCESS\r\n  photoData: PhotosType\r\n}\r\nexport const uploadPhotoSuccess = (photoData: PhotosType): UploadPhotoSuccessActionType => ({\r\n  type: UPLOAD_PHOTO_SUCCESS,\r\n  photoData\r\n});\r\n\r\nexport const setUserProfileThunk = (userId: number): ThunkType => async (dispatch) => {\r\n  const userDataProfile = await userAPI.getUserProfile(userId)\r\n  dispatch(setUserProfile(userDataProfile))\r\n}\r\n\r\nexport const getUserStatusMessage = (userId: number): ThunkType => async (dispatch) => {\r\n  const statusMessage = await userProfile.getStatus(userId)\r\n  dispatch(setUserStatus(statusMessage))\r\n}\r\n\r\nexport const setUserStatusMessage = (messageStatus: string): ThunkType => async (dispatch) => {\r\n  const response = await userProfile.updateStatus(messageStatus)\r\n  if (response.data.resultCode === ResultCodesEnum.Success) {\r\n    dispatch(setUserStatus(messageStatus))\r\n  }\r\n}\r\n\r\nexport const uploadPhotoFile = (photoFile: any): ThunkType => async (dispatch) => {\r\n  const data = await userProfile.uploadPhoto(photoFile)\r\n  if (data.resultCode === ResultCodesEnum.Success) {\r\n    dispatch(uploadPhotoSuccess(data.data))\r\n  }\r\n}\r\n\r\nexport const saveProfileData = (profileData: ProfileType): ThunkType => async (dispatch, getState) => {\r\n  const userId = getState().authorizeUser.userId\r\n  const response = await userProfile.updateProfile(profileData)\r\n  if (response.data.resultCode === ResultCodesEnum.Success && userId !== null) {\r\n    dispatch(setUserProfileThunk(userId))\r\n  } else {\r\n    console.log('Some error')\r\n    // dispatch(stopSubmit('editProfileForm', ({'contacts': {'facebook': response.data.messages[0]}})))\r\n  }\r\n}\r\n\r\nexport default profilePageReducer;\r\n\r\n\r\n\r\n","/home/evgkam/WebstormProjects/react-samurai/src/redux/sidebar-reducer.ts",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Sidebar/FreindsList/FreindListContainer.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/components/Sidebar/FreindsList/FreindList.jsx",[],"/home/evgkam/WebstormProjects/react-samurai/src/redux/users-selectors.ts",[],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":1,"column":9,"nodeType":"227","messageId":"228","endLine":1,"endColumn":20},{"ruleId":"225","severity":1,"message":"229","line":2,"column":9,"nodeType":"227","messageId":"228","endLine":2,"endColumn":21},{"ruleId":"230","severity":1,"message":"231","line":1,"column":8,"nodeType":"227","messageId":"228","endLine":1,"endColumn":13},{"ruleId":"232","severity":1,"message":"233","line":64,"column":99,"nodeType":"234","messageId":"235","endLine":64,"endColumn":100,"fix":"236"},{"ruleId":"230","severity":1,"message":"237","line":6,"column":9,"nodeType":"227","messageId":"228","endLine":6,"endColumn":16},{"ruleId":"238","severity":1,"message":"239","line":29,"column":9,"nodeType":"240","endLine":29,"endColumn":110},{"ruleId":"230","severity":1,"message":"241","line":1,"column":16,"nodeType":"227","messageId":"228","endLine":1,"endColumn":24},{"ruleId":"242","severity":1,"message":"243","line":19,"column":44,"nodeType":"244","messageId":"245","endLine":19,"endColumn":46},{"ruleId":"230","severity":1,"message":"241","line":1,"column":16,"nodeType":"227","messageId":"228","endLine":1,"endColumn":24},{"ruleId":"225","severity":1,"message":"246","line":2,"column":9,"nodeType":"227","messageId":"228","endLine":2,"endColumn":19},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"@typescript-eslint/no-unused-vars","'ThunkAction' is defined but never used.","Identifier","unusedVar","'AppStateType' is defined but never used.","no-unused-vars","'React' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"249","text":"250"},"'connect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'stopSubmit' is defined but never used.","no-global-assign","no-unsafe-negation",[1781,1788],"\r\n    ."]